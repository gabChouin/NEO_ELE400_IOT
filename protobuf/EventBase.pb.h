/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.0-dev */

#ifndef PB_EVENTBASE_PB_H_INCLUDED
#define PB_EVENTBASE_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _EventBase {
    char id[40];
    char correlationId[40];
    int32_t deviceTime;
    char deviceId[40];
    int32_t version;
    char commandId[40];
    pb_byte_t payload[40];
/* @@protoc_insertion_point(struct:EventBase) */
} EventBase;


/* Initializer values for message structs */
#define EventBase_init_default                   {"", "", 0, "", 0, "", {0}}
#define EventBase_init_zero                      {"", "", 0, "", 0, "", {0}}

/* Field tags (for use in manual encoding/decoding) */
#define EventBase_id_tag                         1
#define EventBase_correlationId_tag              2
#define EventBase_deviceTime_tag                 3
#define EventBase_deviceId_tag                   4
#define EventBase_version_tag                    5
#define EventBase_commandId_tag                  6
#define EventBase_payload_tag                    7

/* Struct field encoding specification for nanopb */
#define EventBase_FIELDLIST(X, a) \
X(a, STATIC, SINGULAR, STRING, id, 1) \
X(a, STATIC, SINGULAR, STRING, correlationId, 2) \
X(a, STATIC, SINGULAR, INT32, deviceTime, 3) \
X(a, STATIC, SINGULAR, STRING, deviceId, 4) \
X(a, STATIC, SINGULAR, INT32, version, 5) \
X(a, STATIC, SINGULAR, STRING, commandId, 6) \
X(a, STATIC, SINGULAR, FIXED_LENGTH_BYTES, payload, 7)
#define EventBase_CALLBACK NULL
#define EventBase_DEFAULT NULL

extern const pb_msgdesc_t EventBase_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define EventBase_fields &EventBase_msg

/* Maximum encoded size of messages (where known) */
#define EventBase_size                           228

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
